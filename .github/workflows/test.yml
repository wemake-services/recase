name: test

'on':
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    strategy:
      fail-fast: false
      matrix:
        elixir: ['1.14', '1.15', '1.16']
        otp: ['25', '26']

    steps:
    - uses: actions/checkout@v4

    - name: Setup elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Get deps cache
      uses: actions/cache@v4
      with:
        path: deps/
        key: deps-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

    - name: Get build cache
      uses: actions/cache@v4
      with:
        path: _build/test/
        key: build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
        mix compile

    - name: Run linters
      run: |
        mix format --check-formatted
        mix credo --strict

    - name: Run Tests
      run: mix coveralls.github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Retrieve PLT Cache
      uses: actions/cache@v4
      id: plt-cache
      with:
        path: priv/plts
        key: plts-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --no-check
